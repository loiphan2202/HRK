{"version":3,"sources":["turbopack:///[project]/src/server/repositories/product-repository.ts","turbopack:///[project]/src/server/services/product-service.ts","turbopack:///[project]/src/server/utils/upload.ts","turbopack:///[project]/src/server/schemas/product-schema.ts","turbopack:///[project]/src/server/controllers/product-controller.ts","turbopack:///[project]/src/app/api/products/[id]/route.ts","turbopack:///[project]/node_modules/next/dist/src/build/templates/app-route.ts"],"sourcesContent":["import { Product } from '@/generated/prisma/client';\r\nimport { BaseRepository, PrismaModelDelegate } from './base-repository';\r\nimport { ProductCreate, ProductUpdate } from '../schemas/product-schema';\r\n\r\nexport class ProductRepository extends BaseRepository<Product, ProductCreate, ProductUpdate> {\r\n  protected getDelegate(): PrismaModelDelegate<Product, ProductCreate, ProductUpdate> {\r\n    return {\r\n      findUnique: (args) => this.prisma.product.findUnique(args),\r\n      findMany: (args) => this.prisma.product.findMany(args),\r\n      create: (args) => this.prisma.product.create(args),\r\n      update: (args) => this.prisma.product.update(args),\r\n      delete: (args) => this.prisma.product.delete(args),\r\n    };\r\n  }\r\n\r\n  async updateStock(id: string, quantity: number): Promise<Product> {\r\n    return await this.prisma.product.update({\r\n      where: { id },\r\n      data: {\r\n        stock: {\r\n          decrement: quantity,\r\n        },\r\n      },\r\n    });\r\n  }\r\n}","import { Product } from '@/generated/prisma/client';\r\nimport { ProductRepository } from '../repositories/product-repository';\r\nimport { ProductCreate, ProductUpdate } from '../schemas/product-schema';\r\nimport { NotFoundError, BadRequestError } from '../errors/base-error';\r\n\r\nexport class ProductService {\r\n  private readonly repository: ProductRepository;\r\n\r\n  constructor() {\r\n    this.repository = new ProductRepository();\r\n  }\r\n\r\n  async findById(id: string): Promise<Product> {\r\n    const product = await this.repository.findById(id);\r\n    if (!product) {\r\n      throw new NotFoundError('Product not found');\r\n    }\r\n    return product;\r\n  }\r\n\r\n  async findAll(): Promise<Product[]> {\r\n    return await this.repository.findAll();\r\n  }\r\n\r\n  async create(data: ProductCreate): Promise<Product> {\r\n    if (data.stock < 0) {\r\n      throw new BadRequestError('Stock cannot be negative');\r\n    }\r\n    if (data.price <= 0) {\r\n      throw new BadRequestError('Price must be positive');\r\n    }\r\n    return await this.repository.create(data);\r\n  }\r\n\r\n  async update(id: string, data: ProductUpdate): Promise<Product> {\r\n    await this.findById(id); // Check if product exists\r\n\r\n    if (data.stock !== undefined && data.stock < 0) {\r\n      throw new BadRequestError('Stock cannot be negative');\r\n    }\r\n    if (data.price !== undefined && data.price <= 0) {\r\n      throw new BadRequestError('Price must be positive');\r\n    }\r\n\r\n    return await this.repository.update(id, data);\r\n  }\r\n\r\n  async delete(id: string): Promise<Product> {\r\n    await this.findById(id); // Check if product exists\r\n    return await this.repository.delete(id);\r\n  }\r\n\r\n  async updateStock(id: string, quantity: number): Promise<Product> {\r\n    const product = await this.findById(id);\r\n    if (product.stock < quantity) {\r\n      throw new BadRequestError('Insufficient stock');\r\n    }\r\n    return await this.repository.updateStock(id, quantity);\r\n  }\r\n}","import fs from 'fs';\r\nimport path from 'path';\r\n\r\ntype DestDir = 'users' | 'products';\r\n\r\nconst VALID_MIME_TYPES = new Set([\r\n  'image/jpeg',\r\n  'image/png',\r\n  'image/gif',\r\n  'image/webp'\r\n]);\r\n\r\n// Magic numbers for different image formats\r\nconst MAGIC_NUMBERS = {\r\n  jpeg: [0xFF, 0xD8, 0xFF],\r\n  png: [0x89, 0x50, 0x4E, 0x47],\r\n  gif: [0x47, 0x49, 0x46, 0x38],\r\n  webp: [0x52, 0x49, 0x46, 0x46]\r\n};\r\n\r\nfunction getExtensionFromMimeType(mimeType: string): string | null {\r\n  switch (mimeType) {\r\n    case 'image/jpeg': return 'jpg';\r\n    case 'image/png': return 'png';\r\n    case 'image/gif': return 'gif';\r\n    case 'image/webp': return 'webp';\r\n    default: return null;\r\n  }\r\n}\r\n\r\nfunction isValidImageType(mimeType: string): boolean {\r\n  return VALID_MIME_TYPES.has(mimeType);\r\n}\r\n\r\nfunction detectFileType(buffer: Buffer): string | null {\r\n  if (buffer.length < 8) return null;\r\n\r\n  // Check JPEG\r\n  if (buffer[0] === 0xFF && buffer[1] === 0xD8 && buffer[2] === 0xFF) {\r\n    return 'image/jpeg';\r\n  }\r\n\r\n  // Check PNG\r\n  if (buffer[0] === 0x89 && buffer[1] === 0x50 && buffer[2] === 0x4E && buffer[3] === 0x47) {\r\n    return 'image/png';\r\n  }\r\n\r\n  // Check GIF\r\n  if (buffer[0] === 0x47 && buffer[1] === 0x49 && buffer[2] === 0x46 && buffer[3] === 0x38) {\r\n    return 'image/gif';\r\n  }\r\n\r\n  // Check WebP (RIFF header)\r\n  if (buffer[0] === 0x52 && buffer[1] === 0x49 && buffer[2] === 0x46 && buffer[3] === 0x46) {\r\n    // Check for WEBP string at offset 8\r\n    if (buffer.length >= 12 && \r\n        buffer[8] === 0x57 && buffer[9] === 0x45 && \r\n        buffer[10] === 0x42 && buffer[11] === 0x50) {\r\n      return 'image/webp';\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function saveFile(file: Blob, dest: DestDir, prefix?: string) {\r\n  if (!file) {\r\n    throw new Error('No file provided');\r\n  }\r\n\r\n  // Get file content as buffer for type detection\r\n  const arrayBuffer = await file.arrayBuffer();\r\n  const fileBuffer = Buffer.from(arrayBuffer);\r\n\r\n  // Check file size (max 5MB)\r\n  const maxSize = 5 * 1024 * 1024; // 5MB\r\n  if (fileBuffer.length > maxSize) {\r\n    throw new Error('File size exceeds 5MB limit');\r\n  }\r\n\r\n  // First check the provided MIME type\r\n  console.log('File type:', file.type);\r\n  \r\n  // Detect file type from content\r\n  const detectedMimeType = detectFileType(fileBuffer);\r\n  console.log('Detected MIME type:', detectedMimeType);\r\n\r\n  if (!detectedMimeType || !isValidImageType(detectedMimeType)) {\r\n    console.error('Invalid file type. Detected:', detectedMimeType);\r\n    throw new Error('Invalid file type. Only JPEG, PNG, GIF, and WebP images are allowed.');\r\n  }\r\n\r\n  // Get extension from detected MIME type\r\n  const ext = '.' + getExtensionFromMimeType(detectedMimeType);\r\n  if (!ext) {\r\n    throw new Error('Could not determine file extension');\r\n  }\r\n\r\n  // Create upload directory if it doesn't exist\r\n  const uploadsRoot = path.join(process.cwd(), 'public', 'uploads', dest);\r\n  await fs.promises.mkdir(uploadsRoot, { recursive: true });\r\n\r\n  // Generate safe filename\r\n  const timestamp = Date.now();\r\n  const safePrefix = prefix ? prefix.replaceAll(/[^a-zA-Z0-9-_]/g, '') : 'file';\r\n  const filename = `${safePrefix}_${timestamp}${ext}`;\r\n  const fullPath = path.join(uploadsRoot, filename);\r\n\r\n  await fs.promises.writeFile(fullPath, fileBuffer);\r\n\r\n  // return public relative path\r\n  return `/uploads/${dest}/${filename}`;\r\n}\r\n\r\nexport async function saveFileFromForm(formData: FormData, fieldName: string, dest: DestDir, prefix?: string) {\r\n  const entry = formData.get(fieldName);\r\n  if (!entry) return null;\r\n  // entry may be File or string\r\n  if (typeof entry === 'string') return null;\r\n  return await saveFile(entry as Blob, dest, prefix);\r\n}\r\n","import { z } from 'zod';\r\n\r\nexport const productCreateSchema = z.object({\r\n  name: z.string(),\r\n  description: z.string().optional(),\r\n  price: z.number().positive(),\r\n  stock: z.number().int().min(0),\r\n  image: z.string().optional(),\r\n  categoryId: z.string(), // Category ID\r\n});\r\n\r\nexport const productUpdateSchema = z.object({\r\n  name: z.string().optional(),\r\n  description: z.string().optional(),\r\n  price: z.number().positive().optional(),\r\n  stock: z.number().int().min(0).optional(),\r\n  image: z.string().optional(),\r\n  categoryId: z.string().optional(),\r\n});\r\n\r\nexport type ProductCreate = z.infer<typeof productCreateSchema>;\r\nexport type ProductUpdate = z.infer<typeof productUpdateSchema>;","import { NextResponse } from 'next/server';\r\nimport { ProductService } from '../services/product-service';\r\nimport { productCreateSchema, productUpdateSchema, ProductUpdate } from '../schemas/product-schema';\r\nimport { ErrorHandler } from '../errors/error-handler';\r\nimport { saveFileFromForm } from '@/server/utils/upload';\r\n\r\nexport class ProductController {\r\n  private readonly service: ProductService;\r\n\r\n  constructor() {\r\n    this.service = new ProductService();\r\n  }\r\n\r\n  private async processFormData(form: FormData): Promise<Record<string, string | number>> {\r\n    const data: Record<string, string | number> = {};\r\n    for (const key of Array.from(form.keys())) {\r\n      const value = form.get(key);\r\n      if (typeof value === 'string') {\r\n        if (key === 'price' || key === 'stock') {\r\n          const numValue = Number(value);\r\n          if (!Number.isNaN(numValue)) {\r\n            data[key] = numValue;\r\n          }\r\n        } else {\r\n          data[key] = value;\r\n        }\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  private async handleImageUpload(form: FormData, id: string, validated: ProductUpdate) {\r\n    const imageFile = form.get('image');\r\n    if (imageFile && imageFile instanceof Blob && imageFile.size > 0) {\r\n      try {\r\n        const imagePath = await saveFileFromForm(form, 'image', 'products', id);\r\n        if (imagePath) {\r\n          return await this.service.update(id, { ...validated, image: imagePath });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error saving image:', error);\r\n        throw new Error('Invalid image file. Only JPEG, PNG, GIF, and WEBP are allowed.');\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  async create(req: Request) {\r\n    try {\r\n      const contentType = req.headers.get('content-type') || '';\r\n\r\n      if (contentType.includes('multipart/form-data')) {\r\n        const form = await req.formData();\r\n        const formData = await this.processFormData(form);\r\n        const validated = productCreateSchema.parse(formData);\r\n        const product = await this.service.create(validated);\r\n\r\n        // save file if provided\r\n        const imagePath = await saveFileFromForm(form, 'image', 'products', product.id);\r\n        if (imagePath) {\r\n          await this.service.update(product.id, { image: imagePath });\r\n          const updated = await this.service.findById(product.id);\r\n          return NextResponse.json({ success: true, data: updated });\r\n        }\r\n\r\n        return NextResponse.json({ success: true, data: product });\r\n      } else {\r\n        const data = await req.json();\r\n        const validated = productCreateSchema.parse(data);\r\n        const product = await this.service.create(validated);\r\n        return NextResponse.json({ success: true, data: product });\r\n      }\r\n    } catch (error: unknown) {\r\n      return ErrorHandler.handle(error);\r\n    }\r\n  }\r\n\r\n  async update(req: Request, id: string) {\r\n    try {\r\n      const contentType = req.headers.get('content-type') || '';\r\n      console.log('Update request content-type:', contentType);\r\n\r\n      if (contentType.includes('multipart/form-data')) {\r\n        const form = await req.formData();\r\n        console.log('Update form data:', Object.fromEntries(form.entries()));\r\n        \r\n        // Xử lý dữ liệu form\r\n        const formData = await this.processFormData(form);\r\n        console.log('Processed update data:', formData);\r\n        \r\n        // Validate dữ liệu\r\n        const validatedData = productUpdateSchema.parse(formData);\r\n\r\n        try {\r\n          // Xử lý upload ảnh nếu có\r\n          const updatedWithImage = await this.handleImageUpload(form, id, validatedData);\r\n          if (updatedWithImage) {\r\n            return NextResponse.json({ success: true, data: updatedWithImage });\r\n          }\r\n\r\n          // Nếu không có ảnh mới hoặc ảnh không hợp lệ, chỉ cập nhật thông tin khác\r\n          const product = await this.service.update(id, validatedData);\r\n          return NextResponse.json({ success: true, data: product });\r\n        } catch (error) {\r\n          return ErrorHandler.handle(error);\r\n        }\r\n      } else {\r\n        const data = await req.json();\r\n        const validated = productUpdateSchema.parse(data);\r\n        const product = await this.service.update(id, validated);\r\n        return NextResponse.json({ success: true, data: product });\r\n      }\r\n    } catch (error: unknown) {\r\n      return ErrorHandler.handle(error);\r\n    }\r\n  }\r\n\r\n  async delete(req: Request, id: string) {\r\n    try {\r\n      const product = await this.service.delete(id);\r\n      return NextResponse.json({ success: true, data: product });\r\n    } catch (error: unknown) {\r\n      return ErrorHandler.handle(error);\r\n    }\r\n  }\r\n\r\n  async getById(req: Request, id: string) {\r\n    try {\r\n      const product = await this.service.findById(id);\r\n      return NextResponse.json({ success: true, data: product });\r\n    } catch (error: unknown) {\r\n      return ErrorHandler.handle(error);\r\n    }\r\n  }\r\n\r\n  async getAll(req: Request) {\r\n    try {\r\n      const products = await this.service.findAll();\r\n      return NextResponse.json({ success: true, data: products });\r\n    } catch (error: unknown) {\r\n      return ErrorHandler.handle(error);\r\n    }\r\n  }\r\n}\r\n","import { ProductController } from '@/server/controllers/product-controller';\r\n\r\nconst controller = new ProductController();\r\n\r\nexport async function GET(request: Request, { params }: { params: Promise<{ id: string }> }) {\r\n  const { id } = await params;\r\n  return controller.getById(request, id);\r\n}\r\n\r\nexport async function PUT(request: Request, { params }: { params: Promise<{ id: string }> }) {\r\n  const { id } = await params;\r\n  return controller.update(request, id);\r\n}\r\n\r\nexport async function DELETE(request: Request, { params }: { params: Promise<{ id: string }> }) {\r\n  const { id } = await params;\r\n  return controller.delete(request, id);\r\n}","import {\n  AppRouteRouteModule,\n  type AppRouteRouteHandlerContext,\n  type AppRouteRouteModuleOptions,\n} from '../../server/route-modules/app-route/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { patchFetch as _patchFetch } from '../../server/lib/patch-fetch'\nimport type { IncomingMessage, ServerResponse } from 'node:http'\nimport { getRequestMeta } from '../../server/request-meta'\nimport { getTracer, type Span, SpanKind } from '../../server/lib/trace/tracer'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { NodeNextRequest, NodeNextResponse } from '../../server/base-http/node'\nimport {\n  NextRequestAdapter,\n  signalFromNodeResponse,\n} from '../../server/web/spec-extension/adapters/next-request'\nimport { BaseServerSpan } from '../../server/lib/trace/constants'\nimport { getRevalidateReason } from '../../server/instrumentation/utils'\nimport { sendResponse } from '../../server/send-response'\nimport {\n  fromNodeOutgoingHttpHeaders,\n  toNodeOutgoingHttpHeaders,\n} from '../../server/web/utils'\nimport { getCacheControlHeader } from '../../server/lib/cache-control'\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from '../../lib/constants'\nimport { NoFallbackError } from '../../shared/lib/no-fallback-error.external'\nimport {\n  CachedRouteKind,\n  type ResponseCacheEntry,\n  type ResponseGenerator,\n} from '../../server/response-cache'\n\nimport * as userland from 'VAR_USERLAND'\n\n// These are injected by the loader afterwards. This is injected as a variable\n// instead of a replacement because this could also be `undefined` instead of\n// an empty string.\ndeclare const nextConfigOutput: AppRouteRouteModuleOptions['nextConfigOutput']\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\n// INJECT:nextConfigOutput\n\nconst routeModule = new AppRouteRouteModule({\n  definition: {\n    kind: RouteKind.APP_ROUTE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    filename: 'VAR_DEFINITION_FILENAME',\n    bundlePath: 'VAR_DEFINITION_BUNDLE_PATH',\n  },\n  distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n  relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n  resolvedPagePath: 'VAR_RESOLVED_PAGE_PATH',\n  nextConfigOutput,\n  userland,\n})\n\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule\n\nfunction patchFetch() {\n  return _patchFetch({\n    workAsyncStorage,\n    workUnitAsyncStorage,\n  })\n}\n\nexport {\n  routeModule,\n  workAsyncStorage,\n  workUnitAsyncStorage,\n  serverHooks,\n  patchFetch,\n}\n\nexport async function handler(\n  req: IncomingMessage,\n  res: ServerResponse,\n  ctx: {\n    waitUntil: (prom: Promise<void>) => void\n  }\n) {\n  let srcPage = 'VAR_DEFINITION_PAGE'\n\n  // turbopack doesn't normalize `/index` in the page name\n  // so we need to to process dynamic routes properly\n  // TODO: fix turbopack providing differing value from webpack\n  if (process.env.TURBOPACK) {\n    srcPage = srcPage.replace(/\\/index$/, '') || '/'\n  } else if (srcPage === '/index') {\n    // we always normalize /index specifically\n    srcPage = '/'\n  }\n  const multiZoneDraftMode = process.env\n    .__NEXT_MULTI_ZONE_DRAFT_MODE as any as boolean\n\n  const prepareResult = await routeModule.prepare(req, res, {\n    srcPage,\n    multiZoneDraftMode,\n  })\n\n  if (!prepareResult) {\n    res.statusCode = 400\n    res.end('Bad Request')\n    ctx.waitUntil?.(Promise.resolve())\n    return null\n  }\n\n  const {\n    buildId,\n    params,\n    nextConfig,\n    isDraftMode,\n    prerenderManifest,\n    routerServerContext,\n    isOnDemandRevalidate,\n    revalidateOnlyGenerated,\n    resolvedPathname,\n  } = prepareResult\n\n  const normalizedSrcPage = normalizeAppPath(srcPage)\n\n  let isIsr = Boolean(\n    prerenderManifest.dynamicRoutes[normalizedSrcPage] ||\n      prerenderManifest.routes[resolvedPathname]\n  )\n\n  if (isIsr && !isDraftMode) {\n    const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname])\n    const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage]\n\n    if (prerenderInfo) {\n      if (prerenderInfo.fallback === false && !isPrerendered) {\n        throw new NoFallbackError()\n      }\n    }\n  }\n\n  let cacheKey: string | null = null\n\n  if (isIsr && !routeModule.isDev && !isDraftMode) {\n    cacheKey = resolvedPathname\n    // ensure /index and / is normalized to one key\n    cacheKey = cacheKey === '/index' ? '/' : cacheKey\n  }\n\n  const supportsDynamicResponse: boolean =\n    // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true ||\n    // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr\n\n  // This is a revalidation request if the request is for a static\n  // page and it is not being resumed from a postponed render and\n  // it is not a dynamic RSC request then it is a revalidation\n  // request.\n  const isRevalidate = isIsr && !supportsDynamicResponse\n\n  const method = req.method || 'GET'\n  const tracer = getTracer()\n  const activeSpan = tracer.getActiveScopeSpan()\n\n  const context: AppRouteRouteHandlerContext = {\n    params,\n    prerenderManifest,\n    renderOpts: {\n      experimental: {\n        cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n        authInterrupts: Boolean(nextConfig.experimental.authInterrupts),\n      },\n      supportsDynamicResponse,\n      incrementalCache: getRequestMeta(req, 'incrementalCache'),\n      cacheLifeProfiles: nextConfig.experimental?.cacheLife,\n      isRevalidate,\n      waitUntil: ctx.waitUntil,\n      onClose: (cb) => {\n        res.on('close', cb)\n      },\n      onAfterTaskError: undefined,\n      onInstrumentationRequestError: (error, _request, errorContext) =>\n        routeModule.onRequestError(\n          req,\n          error,\n          errorContext,\n          routerServerContext\n        ),\n    },\n    sharedContext: {\n      buildId,\n    },\n  }\n  const nodeNextReq = new NodeNextRequest(req)\n  const nodeNextRes = new NodeNextResponse(res)\n\n  const nextReq = NextRequestAdapter.fromNodeNextRequest(\n    nodeNextReq,\n    signalFromNodeResponse(res)\n  )\n\n  try {\n    const invokeRouteModule = async (span?: Span) => {\n      return routeModule.handle(nextReq, context).finally(() => {\n        if (!span) return\n\n        span.setAttributes({\n          'http.status_code': res.statusCode,\n          'next.rsc': false,\n        })\n\n        const rootSpanAttributes = tracer.getRootSpanAttributes()\n        // We were unable to get attributes, probably OTEL is not enabled\n        if (!rootSpanAttributes) {\n          return\n        }\n\n        if (\n          rootSpanAttributes.get('next.span_type') !==\n          BaseServerSpan.handleRequest\n        ) {\n          console.warn(\n            `Unexpected root span type '${rootSpanAttributes.get(\n              'next.span_type'\n            )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n          )\n          return\n        }\n\n        const route = rootSpanAttributes.get('next.route')\n        if (route) {\n          const name = `${method} ${route}`\n\n          span.setAttributes({\n            'next.route': route,\n            'http.route': route,\n            'next.span_name': name,\n          })\n          span.updateName(name)\n        } else {\n          span.updateName(`${method} ${req.url}`)\n        }\n      })\n    }\n\n    const handleResponse = async (currentSpan?: Span) => {\n      const responseGenerator: ResponseGenerator = async ({\n        previousCacheEntry,\n      }) => {\n        try {\n          if (\n            !getRequestMeta(req, 'minimalMode') &&\n            isOnDemandRevalidate &&\n            revalidateOnlyGenerated &&\n            !previousCacheEntry\n          ) {\n            res.statusCode = 404\n            // on-demand revalidate always sets this header\n            res.setHeader('x-nextjs-cache', 'REVALIDATED')\n            res.end('This page could not be found')\n            return null\n          }\n\n          const response = await invokeRouteModule(currentSpan)\n\n          ;(req as any).fetchMetrics = (context.renderOpts as any).fetchMetrics\n          let pendingWaitUntil = context.renderOpts.pendingWaitUntil\n\n          // Attempt using provided waitUntil if available\n          // if it's not we fallback to sendResponse's handling\n          if (pendingWaitUntil) {\n            if (ctx.waitUntil) {\n              ctx.waitUntil(pendingWaitUntil)\n              pendingWaitUntil = undefined\n            }\n          }\n          const cacheTags = context.renderOpts.collectedTags\n\n          // If the request is for a static response, we can cache it so long\n          // as it's not edge.\n          if (isIsr) {\n            const blob = await response.blob()\n\n            // Copy the headers from the response.\n            const headers = toNodeOutgoingHttpHeaders(response.headers)\n\n            if (cacheTags) {\n              headers[NEXT_CACHE_TAGS_HEADER] = cacheTags\n            }\n\n            if (!headers['content-type'] && blob.type) {\n              headers['content-type'] = blob.type\n            }\n\n            const revalidate =\n              typeof context.renderOpts.collectedRevalidate === 'undefined' ||\n              context.renderOpts.collectedRevalidate >= INFINITE_CACHE\n                ? false\n                : context.renderOpts.collectedRevalidate\n\n            const expire =\n              typeof context.renderOpts.collectedExpire === 'undefined' ||\n              context.renderOpts.collectedExpire >= INFINITE_CACHE\n                ? undefined\n                : context.renderOpts.collectedExpire\n\n            // Create the cache entry for the response.\n            const cacheEntry: ResponseCacheEntry = {\n              value: {\n                kind: CachedRouteKind.APP_ROUTE,\n                status: response.status,\n                body: Buffer.from(await blob.arrayBuffer()),\n                headers,\n              },\n              cacheControl: { revalidate, expire },\n            }\n\n            return cacheEntry\n          } else {\n            // send response without caching if not ISR\n            await sendResponse(\n              nodeNextReq,\n              nodeNextRes,\n              response,\n              context.renderOpts.pendingWaitUntil\n            )\n            return null\n          }\n        } catch (err) {\n          // if this is a background revalidate we need to report\n          // the request error here as it won't be bubbled\n          if (previousCacheEntry?.isStale) {\n            await routeModule.onRequestError(\n              req,\n              err,\n              {\n                routerKind: 'App Router',\n                routePath: srcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                  isRevalidate,\n                  isOnDemandRevalidate,\n                }),\n              },\n              routerServerContext\n            )\n          }\n          throw err\n        }\n      }\n\n      const cacheEntry = await routeModule.handleResponse({\n        req,\n        nextConfig,\n        cacheKey,\n        routeKind: RouteKind.APP_ROUTE,\n        isFallback: false,\n        prerenderManifest,\n        isRoutePPREnabled: false,\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated,\n        responseGenerator,\n        waitUntil: ctx.waitUntil,\n      })\n\n      // we don't create a cacheEntry for ISR\n      if (!isIsr) {\n        return null\n      }\n\n      if (cacheEntry?.value?.kind !== CachedRouteKind.APP_ROUTE) {\n        throw new Error(\n          `Invariant: app-route received invalid cache entry ${cacheEntry?.value?.kind}`\n        )\n      }\n\n      if (!getRequestMeta(req, 'minimalMode')) {\n        res.setHeader(\n          'x-nextjs-cache',\n          isOnDemandRevalidate\n            ? 'REVALIDATED'\n            : cacheEntry.isMiss\n              ? 'MISS'\n              : cacheEntry.isStale\n                ? 'STALE'\n                : 'HIT'\n        )\n      }\n\n      // Draft mode should never be cached\n      if (isDraftMode) {\n        res.setHeader(\n          'Cache-Control',\n          'private, no-cache, no-store, max-age=0, must-revalidate'\n        )\n      }\n\n      const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers)\n\n      if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n        headers.delete(NEXT_CACHE_TAGS_HEADER)\n      }\n\n      // If cache control is already set on the response we don't\n      // override it to allow users to customize it via next.config\n      if (\n        cacheEntry.cacheControl &&\n        !res.getHeader('Cache-Control') &&\n        !headers.get('Cache-Control')\n      ) {\n        headers.set(\n          'Cache-Control',\n          getCacheControlHeader(cacheEntry.cacheControl)\n        )\n      }\n\n      await sendResponse(\n        nodeNextReq,\n        nodeNextRes,\n        new Response(cacheEntry.value.body, {\n          headers,\n          status: cacheEntry.value.status || 200,\n        })\n      )\n      return null\n    }\n\n    // TODO: activeSpan code path is for when wrapped by\n    // next-server can be removed when this is no longer used\n    if (activeSpan) {\n      await handleResponse(activeSpan)\n    } else {\n      await tracer.withPropagatedContext(req.headers, () =>\n        tracer.trace(\n          BaseServerSpan.handleRequest,\n          {\n            spanName: `${method} ${req.url}`,\n            kind: SpanKind.SERVER,\n            attributes: {\n              'http.method': method,\n              'http.target': req.url,\n            },\n          },\n          handleResponse\n        )\n      )\n    }\n  } catch (err) {\n    if (!(err instanceof NoFallbackError)) {\n      await routeModule.onRequestError(req, err, {\n        routerKind: 'App Router',\n        routePath: normalizedSrcPage,\n        routeType: 'route',\n        revalidateReason: getRevalidateReason({\n          isRevalidate,\n          isOnDemandRevalidate,\n        }),\n      })\n    }\n\n    // rethrow so that we can handle serving error page\n\n    // If this is during static generation, throw the error again.\n    if (isIsr) throw err\n\n    // Otherwise, send a 500 response.\n    await sendResponse(\n      nodeNextReq,\n      nodeNextRes,\n      new Response(null, { status: 500 })\n    )\n    return null\n  }\n}\n"],"names":["AppRouteRouteModule","RouteKind","patchFetch","_patchFetch","getRequestMeta","getTracer","SpanKind","normalizeAppPath","NodeNextRequest","NodeNextResponse","NextRequestAdapter","signalFromNodeResponse","BaseServerSpan","getRevalidateReason","sendResponse","fromNodeOutgoingHttpHeaders","toNodeOutgoingHttpHeaders","getCacheControlHeader","INFINITE_CACHE","NEXT_CACHE_TAGS_HEADER","NoFallbackError","CachedRouteKind","userland","routeModule","definition","kind","APP_ROUTE","page","pathname","filename","bundlePath","distDir","process","env","__NEXT_RELATIVE_DIST_DIR","relativeProjectDir","__NEXT_RELATIVE_PROJECT_DIR","resolvedPagePath","nextConfigOutput","workAsyncStorage","workUnitAsyncStorage","serverHooks","handler","req","res","ctx","nextConfig","srcPage","TURBOPACK","replace","multiZoneDraftMode","__NEXT_MULTI_ZONE_DRAFT_MODE","prepareResult","prepare","statusCode","end","waitUntil","Promise","resolve","buildId","params","isDraftMode","prerenderManifest","routerServerContext","isOnDemandRevalidate","revalidateOnlyGenerated","resolvedPathname","normalizedSrcPage","isIsr","Boolean","dynamicRoutes","routes","isPrerendered","prerenderInfo","fallback","cacheKey","isDev","supportsDynamicResponse","isRevalidate","method","tracer","activeSpan","getActiveScopeSpan","context","renderOpts","experimental","cacheComponents","authInterrupts","incrementalCache","cacheLifeProfiles","cacheLife","onClose","cb","on","onAfterTaskError","undefined","onInstrumentationRequestError","error","_request","errorContext","onRequestError","sharedContext","nodeNextReq","nodeNextRes","nextReq","fromNodeNextRequest","invokeRouteModule","span","handle","finally","setAttributes","rootSpanAttributes","getRootSpanAttributes","get","handleRequest","console","warn","route","name","updateName","url","handleResponse","currentSpan","cacheEntry","responseGenerator","previousCacheEntry","setHeader","response","fetchMetrics","pendingWaitUntil","cacheTags","collectedTags","blob","headers","type","revalidate","collectedRevalidate","expire","collectedExpire","value","status","body","Buffer","from","arrayBuffer","cacheControl","err","isStale","routerKind","routePath","routeType","revalidateReason","routeKind","isFallback","isRoutePPREnabled","Error","isMiss","delete","getHeader","set","Response","withPropagatedContext","trace","spanName","SERVER","attributes"],"mappings":"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","ignoreList":[6]}