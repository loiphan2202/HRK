module.exports=[18622,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js"))},56704,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-async-storage.external.js",()=>require("next/dist/server/app-render/work-async-storage.external.js"))},32319,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-unit-async-storage.external.js",()=>require("next/dist/server/app-render/work-unit-async-storage.external.js"))},20635,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/action-async-storage.external.js",()=>require("next/dist/server/app-render/action-async-storage.external.js"))},24725,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/after-task-async-storage.external.js",()=>require("next/dist/server/app-render/after-task-async-storage.external.js"))},70406,(e,t,r)=>{t.exports=e.x("next/dist/compiled/@opentelemetry/api",()=>require("next/dist/compiled/@opentelemetry/api"))},93695,(e,t,r)=>{t.exports=e.x("next/dist/shared/lib/no-fallback-error.external.js",()=>require("next/dist/shared/lib/no-fallback-error.external.js"))},59639,(e,t,r)=>{t.exports=e.x("node:process",()=>require("node:process"))},50227,(e,t,r)=>{t.exports=e.x("node:path",()=>require("node:path"))},57764,(e,t,r)=>{t.exports=e.x("node:url",()=>require("node:url"))},4733,e=>e.a(async(t,r)=>{try{let t=await e.y("@prisma/client/runtime/library");e.n(t),r()}catch(e){r(e)}},!0),5485,e=>e.a(async(t,r)=>{try{e.s(["TableRepository",()=>s]);var a=e.i(56905),i=t([a]);[a]=i.then?(await i)():i;class s extends a.BaseRepository{getDelegate(){return{findUnique:e=>this.prisma.table.findUnique(e),findMany:e=>this.prisma.table.findMany(e),create:e=>this.prisma.table.create(e),update:e=>this.prisma.table.update(e),delete:e=>this.prisma.table.delete(e)}}async findByNumber(e){return await this.prisma.table.findUnique({where:{number:e}})}async findByQrCode(e){return await this.prisma.table.findFirst({where:{qrCode:e}})}async findByToken(e){return await this.prisma.table.findUnique({where:{token:e}})}}r()}catch(e){r(e)}},!1),90528,e=>e.a(async(t,r)=>{try{e.s(["TableService",()=>n]);var a=e.i(5485),i=e.i(37391),s=t([a]);[a]=s.then?(await s)():s;class n{repository;constructor(){this.repository=new a.TableRepository}async findById(e){let t=await this.repository.findById(e);if(!t)throw new i.NotFoundError("Table not found");return t}async findByNumber(e){return await this.repository.findByNumber(e)}async findByQrCode(e){return await this.repository.findByQrCode(e)}async findByToken(e){return await this.repository.findByToken(e)}async generateQrCode(t){await this.findById(t);let{generateToken:r,generateQrCodeImage:a}=await e.A(7134),i=r(),s=process.env.NEXT_PUBLIC_BASE_URL||"http://localhost:3000",n=`${s}/check-in?token=${i}`,o=await a(n);return await this.repository.update(t,{token:i,qrCode:o})}async findAll(){return await this.repository.findAll()}async create(e){if(await this.repository.findByNumber(e.number))throw new i.BadRequestError(`Table number ${e.number} already exists`);return await this.repository.create(e)}async update(e,t){if(await this.findById(e),t.number){let r=await this.repository.findByNumber(t.number);if(r&&r.id!==e)throw new i.BadRequestError(`Table number ${t.number} already exists`)}return await this.repository.update(e,t)}async delete(e){return await this.findById(e),await this.repository.delete(e)}async updateStatus(e,t){return await this.update(e,{status:t})}}r()}catch(e){r(e)}},!1),94056,e=>e.a(async(t,r)=>{try{e.s(["ProductRepository",()=>s]);var a=e.i(56905),i=t([a]);[a]=i.then?(await i)():i;class s extends a.BaseRepository{getDelegate(){return{findUnique:e=>this.prisma.product.findUnique(e),findMany:e=>this.prisma.product.findMany(e),create:e=>this.prisma.product.create(e),update:e=>this.prisma.product.update(e),delete:e=>this.prisma.product.delete(e)}}async updateStock(e,t){return await this.prisma.product.update({where:{id:e},data:{stock:{decrement:t}}})}}r()}catch(e){r(e)}},!1),97175,e=>e.a(async(t,r)=>{try{e.s(["ProductService",()=>n]);var a=e.i(94056),i=e.i(37391),s=t([a]);[a]=s.then?(await s)():s;class n{repository;constructor(){this.repository=new a.ProductRepository}async findById(e){let t=await this.repository.findById(e);if(!t)throw new i.NotFoundError("Product not found");return t}async findAll(){return await this.repository.findAll()}async create(e){if(e.stock<0)throw new i.BadRequestError("Stock cannot be negative");if(e.price<=0)throw new i.BadRequestError("Price must be positive");return await this.repository.create(e)}async update(e,t){if(await this.findById(e),void 0!==t.stock&&t.stock<0)throw new i.BadRequestError("Stock cannot be negative");if(void 0!==t.price&&t.price<=0)throw new i.BadRequestError("Price must be positive");return await this.repository.update(e,t)}async delete(e){return await this.findById(e),await this.repository.delete(e)}async updateStock(e,t){if((await this.findById(e)).stock<t)throw new i.BadRequestError("Insufficient stock");return await this.repository.updateStock(e,t)}}r()}catch(e){r(e)}},!1),3382,e=>e.a(async(t,r)=>{try{e.s(["OrderRepository",()=>s]);var a=e.i(56905),i=t([a]);[a]=i.then?(await i)():i;class s extends a.BaseRepository{getDelegate(){return{findUnique:e=>this.prisma.order.findUnique({...e,include:{products:{include:{product:!0}}}}),findMany:e=>this.prisma.order.findMany({...e,include:{products:{include:{product:!0}}}}),create:e=>this.prisma.order.create({...e,data:{...e.data,userId:e.data.userId||void 0,tableId:e.data.tableId||void 0,tableNumber:e.data.tableNumber||void 0,status:e.data.status||"PENDING",products:{create:e.data.products.map(e=>({productId:e.productId,quantity:e.quantity}))},total:e.data.total||0},include:{products:{include:{product:!0}}}}),update:e=>this.prisma.order.update({...e,include:{products:{include:{product:!0}}}}),delete:e=>this.prisma.order.delete({...e,include:{products:{include:{product:!0}}}})}}async findByUserId(e){return await this.getDelegate().findMany({where:{userId:e}})}async findAll(e){return await this.getDelegate().findMany({where:e||{}})}}r()}catch(e){r(e)}},!1),75120,e=>e.a(async(t,r)=>{try{e.s(["OrderService",()=>u]);var a=e.i(3382),i=e.i(97175),s=e.i(90528),n=e.i(37391),o=e.i(98043),d=t([a,i,s,o]);[a,i,s,o]=d.then?(await d)():d;class u{repository;productService;tableService;constructor(){this.repository=new a.OrderRepository,this.productService=new i.ProductService,this.tableService=new s.TableService}async findById(e){let t=await this.repository.findById(e);if(!t)throw new n.NotFoundError("Order not found");return t}async findByUserId(e){return await this.repository.findByUserId(e)}async findAll(e){let t={};return e?.tableNumber&&(t.tableNumber=parseInt(e.tableNumber)),e?.status&&void 0!==e.status&&(t.status=e.status),await this.repository.findAll(Object.keys(t).length>0?t:void 0)}async update(e,t){let r=await this.findById(e);return"COMPLETED"===t.status&&r.tableId&&!(await this.repository.findAll({tableNumber:r.tableNumber?.toString()||void 0,status:void 0})).some(e=>e.id!==r.id&&("PENDING"===e.status||"PROCESSING"===e.status))&&r.tableId&&await this.tableService.updateStatus(r.tableId,"AVAILABLE"),await this.repository.update(e,t)}async create(e){if(!e.products.length)throw new n.BadRequestError("Order must contain at least one product");let t=0;return await o.prisma.$transaction(async()=>{for(let r of e.products){if(r.quantity<=0)throw new n.BadRequestError("Product quantity must be positive");let e=await this.productService.findById(r.productId);if(e.stock<r.quantity)throw new n.BadRequestError(`Insufficient stock for product ${e.name}`);t+=e.price*r.quantity}let r={...e,total:t};if(e.tableNumber){if(e.tableToken){let t=await this.tableService.findByToken(e.tableToken);if(!t)throw new n.BadRequestError("Invalid table token. Please check in using QR code.");if(t.number!==e.tableNumber)throw new n.BadRequestError("Table token does not match table number.")}else throw new n.BadRequestError("Table token is required. Please check in using QR code.");let t=await this.tableService.findByNumber(e.tableNumber);if(!t)throw new n.BadRequestError(`Table ${e.tableNumber} not found. Please check in using QR code.`);if((await this.repository.findAll({tableNumber:e.tableNumber.toString(),status:"PENDING"})).length>0)throw new n.BadRequestError("Table is occupied with pending orders");await this.tableService.updateStatus(t.id,"OCCUPIED"),r.tableId=t.id}else throw new n.BadRequestError("Table number is required");let a=await this.repository.create(r);return await Promise.all(e.products.map(e=>this.productService.updateStock(e.productId,e.quantity))),a})}}r()}catch(e){r(e)}},!1),82023,e=>{"use strict";e.s(["orderCreateSchema",()=>i,"orderUpdateSchema",()=>s]);var t=e.i(69719);let r=t.z.enum(["PENDING","PROCESSING","COMPLETED","CANCELLED"]),a=t.z.object({productId:t.z.string(),quantity:t.z.number().int().positive()}),i=t.z.object({userId:t.z.string().optional(),tableId:t.z.string().optional(),tableNumber:t.z.number().int().positive().optional(),tableToken:t.z.string().optional(),products:t.z.array(a)}),s=t.z.object({status:r.optional()})},18643,e=>e.a(async(t,r)=>{try{e.s(["OrderController",()=>d]);var a=e.i(89171),i=e.i(75120),s=e.i(82023),n=e.i(15450),o=t([i]);[i]=o.then?(await o)():o;class d{service;constructor(){this.service=new i.OrderService}async create(e){try{let t=await e.json(),r=s.orderCreateSchema.parse(t),i=await this.service.create(r);return a.NextResponse.json({success:!0,data:i})}catch(e){return n.ErrorHandler.handle(e)}}async getById(e,t){try{let e=await this.service.findById(t);return a.NextResponse.json({success:!0,data:e})}catch(e){return n.ErrorHandler.handle(e)}}async getByUserId(e,t){try{let e=await this.service.findByUserId(t);return a.NextResponse.json({success:!0,data:e})}catch(e){return n.ErrorHandler.handle(e)}}async getAll(e){try{let{searchParams:t}=new URL(e.url),r=t.get("tableNumber"),i=t.get("status"),s=await this.service.findAll({tableNumber:r,status:i});return a.NextResponse.json({success:!0,data:s})}catch(e){return n.ErrorHandler.handle(e)}}async update(e,t){try{let r=await e.json(),i=s.orderUpdateSchema.parse(r),n=await this.service.update(t,i);return a.NextResponse.json({success:!0,data:n})}catch(e){return n.ErrorHandler.handle(e)}}}r()}catch(e){r(e)}},!1),62619,(e,t,r)=>{},25231,e=>e.a(async(t,r)=>{try{e.s(["GET",()=>s]);var a=e.i(18643),i=t([a]);[a]=i.then?(await i)():i;let n=new a.OrderController;async function s(e,{params:t}){let{userId:r}=await t;return n.getByUserId(e,r)}r()}catch(e){r(e)}},!1),12681,e=>e.a(async(t,r)=>{try{e.s(["handler",()=>E,"patchFetch",()=>x,"routeModule",()=>g,"serverHooks",()=>B,"workAsyncStorage",()=>I,"workUnitAsyncStorage",()=>N]);var a=e.i(47909),i=e.i(74017),s=e.i(96250),n=e.i(59756),o=e.i(61916),d=e.i(69741),u=e.i(16795),c=e.i(87718),l=e.i(95169),p=e.i(47587),h=e.i(66012),y=e.i(70101),w=e.i(26937),f=e.i(10372),b=e.i(93695);e.i(52474);var m=e.i(220),v=e.i(25231),R=t([v]);[v]=R.then?(await R)():R;let g=new a.AppRouteRouteModule({definition:{kind:i.RouteKind.APP_ROUTE,page:"/api/orders/user/[userId]/route",pathname:"/api/orders/user/[userId]",filename:"route",bundlePath:""},distDir:".next",relativeProjectDir:"",resolvedPagePath:"[project]/src/app/api/orders/user/[userId]/route.ts",nextConfigOutput:"",userland:v}),{workAsyncStorage:I,workUnitAsyncStorage:N,serverHooks:B}=g;function x(){return(0,s.patchFetch)({workAsyncStorage:I,workUnitAsyncStorage:N})}async function E(e,t,r){var a;let s="/api/orders/user/[userId]/route";s=s.replace(/\/index$/,"")||"/";let v=await g.prepare(e,t,{srcPage:s,multiZoneDraftMode:!1});if(!v)return t.statusCode=400,t.end("Bad Request"),null==r.waitUntil||r.waitUntil.call(r,Promise.resolve()),null;let{buildId:R,params:x,nextConfig:E,isDraftMode:I,prerenderManifest:N,routerServerContext:B,isOnDemandRevalidate:q,revalidateOnlyGenerated:S,resolvedPathname:k}=v,C=(0,d.normalizeAppPath)(s),A=!!(N.dynamicRoutes[C]||N.routes[k]);if(A&&!I){let e=!!N.routes[k],t=N.dynamicRoutes[C];if(t&&!1===t.fallback&&!e)throw new b.NoFallbackError}let P=null;!A||g.isDev||I||(P=k,P="/index"===P?"/":P);let T=!0===g.isDev||!A,U=A&&!T,O=e.method||"GET",j=(0,o.getTracer)(),_=j.getActiveScopeSpan(),D={params:x,prerenderManifest:N,renderOpts:{experimental:{cacheComponents:!!E.experimental.cacheComponents,authInterrupts:!!E.experimental.authInterrupts},supportsDynamicResponse:T,incrementalCache:(0,n.getRequestMeta)(e,"incrementalCache"),cacheLifeProfiles:null==(a=E.experimental)?void 0:a.cacheLife,isRevalidate:U,waitUntil:r.waitUntil,onClose:e=>{t.on("close",e)},onAfterTaskError:void 0,onInstrumentationRequestError:(t,r,a)=>g.onRequestError(e,t,a,B)},sharedContext:{buildId:R}},M=new u.NodeNextRequest(e),H=new u.NodeNextResponse(t),$=c.NextRequestAdapter.fromNodeNextRequest(M,(0,c.signalFromNodeResponse)(t));try{let a=async r=>g.handle($,D).finally(()=>{if(!r)return;r.setAttributes({"http.status_code":t.statusCode,"next.rsc":!1});let a=j.getRootSpanAttributes();if(!a)return;if(a.get("next.span_type")!==l.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${a.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let i=a.get("next.route");if(i){let e=`${O} ${i}`;r.setAttributes({"next.route":i,"http.route":i,"next.span_name":e}),r.updateName(e)}else r.updateName(`${O} ${e.url}`)}),d=async o=>{var d,u;let c=async({previousCacheEntry:i})=>{try{if(!(0,n.getRequestMeta)(e,"minimalMode")&&q&&S&&!i)return t.statusCode=404,t.setHeader("x-nextjs-cache","REVALIDATED"),t.end("This page could not be found"),null;let s=await a(o);e.fetchMetrics=D.renderOpts.fetchMetrics;let d=D.renderOpts.pendingWaitUntil;d&&r.waitUntil&&(r.waitUntil(d),d=void 0);let u=D.renderOpts.collectedTags;if(!A)return await (0,h.sendResponse)(M,H,s,D.renderOpts.pendingWaitUntil),null;{let e=await s.blob(),t=(0,y.toNodeOutgoingHttpHeaders)(s.headers);u&&(t[f.NEXT_CACHE_TAGS_HEADER]=u),!t["content-type"]&&e.type&&(t["content-type"]=e.type);let r=void 0!==D.renderOpts.collectedRevalidate&&!(D.renderOpts.collectedRevalidate>=f.INFINITE_CACHE)&&D.renderOpts.collectedRevalidate,a=void 0===D.renderOpts.collectedExpire||D.renderOpts.collectedExpire>=f.INFINITE_CACHE?void 0:D.renderOpts.collectedExpire;return{value:{kind:m.CachedRouteKind.APP_ROUTE,status:s.status,body:Buffer.from(await e.arrayBuffer()),headers:t},cacheControl:{revalidate:r,expire:a}}}}catch(t){throw(null==i?void 0:i.isStale)&&await g.onRequestError(e,t,{routerKind:"App Router",routePath:s,routeType:"route",revalidateReason:(0,p.getRevalidateReason)({isRevalidate:U,isOnDemandRevalidate:q})},B),t}},l=await g.handleResponse({req:e,nextConfig:E,cacheKey:P,routeKind:i.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:N,isRoutePPREnabled:!1,isOnDemandRevalidate:q,revalidateOnlyGenerated:S,responseGenerator:c,waitUntil:r.waitUntil});if(!A)return null;if((null==l||null==(d=l.value)?void 0:d.kind)!==m.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==l||null==(u=l.value)?void 0:u.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,n.getRequestMeta)(e,"minimalMode")||t.setHeader("x-nextjs-cache",q?"REVALIDATED":l.isMiss?"MISS":l.isStale?"STALE":"HIT"),I&&t.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let b=(0,y.fromNodeOutgoingHttpHeaders)(l.value.headers);return(0,n.getRequestMeta)(e,"minimalMode")&&A||b.delete(f.NEXT_CACHE_TAGS_HEADER),!l.cacheControl||t.getHeader("Cache-Control")||b.get("Cache-Control")||b.set("Cache-Control",(0,w.getCacheControlHeader)(l.cacheControl)),await (0,h.sendResponse)(M,H,new Response(l.value.body,{headers:b,status:l.value.status||200})),null};_?await d(_):await j.withPropagatedContext(e.headers,()=>j.trace(l.BaseServerSpan.handleRequest,{spanName:`${O} ${e.url}`,kind:o.SpanKind.SERVER,attributes:{"http.method":O,"http.target":e.url}},d))}catch(t){if(t instanceof b.NoFallbackError||await g.onRequestError(e,t,{routerKind:"App Router",routePath:C,routeType:"route",revalidateReason:(0,p.getRevalidateReason)({isRevalidate:U,isOnDemandRevalidate:q})}),A)throw t;return await (0,h.sendResponse)(M,H,new Response(null,{status:500})),null}}r()}catch(e){r(e)}},!1),7134,e=>{e.v(t=>Promise.all(["server/chunks/[root-of-the-server]__02b9539f._.js","server/chunks/[root-of-the-server]__ac7efcdf._.js"].map(t=>e.l(t))).then(()=>t(29926)))}];

//# sourceMappingURL=%5Broot-of-the-server%5D__9f52e8e9._.js.map